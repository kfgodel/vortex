<project 
	xmlns="http://maven.apache.org/POM/4.0.0" 
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/maven-v4_0_0.xsd">
	<modelVersion>4.0.0</modelVersion>
	<groupId>net.gaia</groupId>
	<artifactId>vortex-j2ee</artifactId>
	<packaging>war</packaging>
	<version>0.2-SNAPSHOT</version>
	<name>Gaia - Vortex</name>

	<properties>
		<project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
		<project.jdk>1.6</project.jdk>
		<org.springframework.version>3.0.2.RELEASE</org.springframework.version>
	</properties>

	<dependencies>

		<!-- Spring Web -->	
		<dependency>
			<groupId>org.springframework</groupId>
			<artifactId>spring-web</artifactId>
			<version>${org.springframework.version}</version>
		</dependency>
		<!-- Spring Web MVC -->	
		<dependency>
			<groupId>org.springframework</groupId>
			<artifactId>spring-webmvc</artifactId>
			<version>${org.springframework.version}</version>
		</dependency>
		

 	   <!-- Requerido por Spring para interpretar los @Configuration -->
	   <dependency>
	      <groupId>cglib</groupId>
	      <artifactId>cglib</artifactId>
	      <version>2.2</version>
	    </dependency>
	    
	    <!-- Requerido para que Spring se integre con Hibernate y la base -->
	   <dependency>
	      <groupId>org.springframework</groupId>
	      <artifactId>spring-orm</artifactId>
	      <version>${org.springframework.version}</version>
	    </dependency>
	    
        <!-- base en memoria -->
        <dependency>
			<groupId>hsqldb</groupId>
			<artifactId>hsqldb</artifactId>
			<version>2.1.0</version>
		</dependency>
		
        <!-- c3p0 - connection pooling -->
        <dependency>
          <groupId>org.hibernate</groupId>
          <artifactId>hibernate-c3p0</artifactId>
          <version>3.5.1-Final</version>
        </dependency>
		<!-- Hibernate Validator -->
		<dependency>
			<groupId>org.hibernate</groupId>
			<artifactId>hibernate-validator</artifactId>
			<version>4.1.0.Beta1</version>
		</dependency>

	   <!-- Hibernate -->
		<dependency>
			<groupId>org.hibernate</groupId>
			<artifactId>hibernate-core</artifactId>
			<version>3.5.1-Final</version>
		</dependency>
		<dependency>
			<groupId>org.hibernate</groupId>
			<artifactId>hibernate-annotations</artifactId>
			<version>3.5.1-Final</version>
		</dependency>
		<dependency>
			<groupId>org.hibernate</groupId>
			<artifactId>hibernate-entitymanager</artifactId>
			<version>3.5.1-Final</version>
		</dependency>
		<!-- Generador de proxies que vienen de la base -->
        <dependency>
            <groupId>javassist</groupId>
            <artifactId>javassist</artifactId>
            <version>3.12.0.GA</version>
        </dependency>
        
        <!--  Manejo de fechas con onda-->
		<dependency>
			<groupId>joda-time</groupId>
			<artifactId>joda-time</artifactId>
			<version>1.6.2</version>
		</dependency>
		<dependency>
			<groupId>joda-time</groupId>
			<artifactId>joda-time-hibernate</artifactId>
			<version>1.2</version>
			<exclusions>
				<exclusion>
					<!-- Si no trae la versión 3.0.5 con otro group -->
					<groupId>org.hibernate</groupId>
					<artifactId>hibernate</artifactId>
				</exclusion>
			</exclusions>
		</dependency>
        
		
		<!-- Necesarias para referenciar a las clases Web y HttpRequest desde código spring -->
		<dependency>
			<groupId>javax.servlet</groupId>
			<artifactId>com.springsource.javax.servlet.jsp.jstl</artifactId>
			<version>1.1.2</version>
		</dependency>
		<dependency>
			<groupId>javax.servlet</groupId>
			<artifactId>com.springsource.javax.servlet</artifactId>
			<version>2.5.0</version>
			<scope>provided</scope>
		</dependency>
		

		<!-- Generación de JSON para comunicación -->
		<dependency>
			<groupId>org.codehaus.jackson</groupId>
			<artifactId>jackson-core-lgpl</artifactId>
			<version>1.8.3</version>
		</dependency>
		<dependency>
			<groupId>org.codehaus.jackson</groupId>
			<artifactId>jackson-mapper-lgpl</artifactId>
			<version>1.8.3</version>
		</dependency>
		
		
		<!-- Poder interpretar los flujos de bytes -->
		<dependency>
		    <groupId>commons-io</groupId>
		    <artifactId>commons-io</artifactId>
		    <version>2.0.1</version>
		</dependency>
		
		<!-- Cron de ejecuciones -->
		<dependency>
		    <groupId>org.quartz-scheduler</groupId>
		    <artifactId>quartz</artifactId>
		    <version>1.7.3</version>
		    <exclusions>
		    	<exclusion>
		    		<groupId>commons-logging</groupId>
		    		<artifactId>commons-logging</artifactId>
		    	</exclusion>
		    </exclusions>
		</dependency>
	
		
		<!-- Logging -->
		<dependency>
			<!-- Facade para todo lo que es logueo -->
			<groupId>org.slf4j</groupId>
			<artifactId>slf4j-api</artifactId>
			<version>1.6.1</version>
		</dependency>
		<dependency>
			<!-- Implementación nativa de slf4j -->
			<groupId>ch.qos.logback</groupId>
			<artifactId>logback-core</artifactId>
			<version>0.9.28</version>
		</dependency>
		<dependency>
			<groupId>ch.qos.logback</groupId>
			<artifactId>logback-classic</artifactId>
			<version>0.9.28</version>
		</dependency>
		<dependency>
			<!-- Adapter que las llamadas a commons-logging pasen por Slf4j-->
			<groupId>org.slf4j</groupId>
			<artifactId>jcl-over-slf4j</artifactId>
			<version>1.6.1</version>
		</dependency>
		<dependency>
			<!-- Adapter que las llamadas a log4j pasen por Slf4j-->
			<groupId>org.slf4j</groupId>
			<artifactId>log4j-over-slf4j</artifactId>
			<version>1.6.1</version>
		</dependency>
		
		
		<!-- Extensiones a Java, especialmente para colecciones -->
		<dependency>
			<groupId>com.google.guava</groupId>
			<artifactId>guava</artifactId>
			<version>r09</version>
		</dependency>
		
		
		<!-- Test dependencies -->
		<dependency>
			<groupId>junit</groupId>
			<artifactId>junit</artifactId>
			<version>4.8.1</version>
			<scope>test</scope>
		</dependency>
		<dependency>
			<groupId>org.dbunit</groupId>
			<artifactId>dbunit</artifactId>
			<version>2.4.7</version>
			<scope>test</scope>
		</dependency>
		<dependency>
			<groupId>org.mockito</groupId>
			<artifactId>mockito-all</artifactId>
			<version>1.8.5</version>
			<scope>test</scope>
		</dependency>
		<dependency>
			<groupId>org.springframework</groupId>
			<artifactId>spring-test</artifactId>
			<version>${org.springframework.version}</version>
			<scope>test</scope>
		</dependency>
		<dependency>
			<groupId>org.powermock.modules</groupId>
			<artifactId>powermock-module-junit4</artifactId>
			<version>1.3.9</version>
			<scope>test</scope>
		</dependency>
		<dependency>
			<groupId>org.powermock.api</groupId>
			<artifactId>powermock-api-mockito</artifactId>
			<version>1.3.9</version>
			<scope>test</scope>
		</dependency>
		
		<!-- Permite meter mocks en las definiciones de beans de spring -->
		<dependency>
	      <groupId>org.kubek2k.mockito.spring</groupId>
	      <artifactId>springockito</artifactId>
	      <version>1.0.0-SNAPSHOT</version>
	    </dependency>
		
		
	</dependencies>
	
	
	<repositories>
		<repository>
			<!-- Repositorio para conseguir:
				com.springsource.javax.servlet
			 -->
			<id>com.springsource.repository.bundles.external</id>
			<name>SpringSource Enterprise Bundle Repository -
				External Releases</name>
			<url>http://repository.springsource.com/maven/bundles/external</url>
		</repository>
    	<repository>
    		<!-- Permite obtener las librerías de hibernate -->
    		<id>Jboss</id>
    		<url>http://repository.jboss.org/nexus/content/groups/public-jboss/</url>
    	</repository>
	
	</repositories>

	<build>
		<finalName>vortex</finalName>
		<plugins>
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-compiler-plugin</artifactId>
				<version>2.3.1</version>
				<configuration>
					<source>1.6</source>
					<target>1.6</target>
				</configuration>
			</plugin>

			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-war-plugin</artifactId>
				<version>2.1.1</version>
				<configuration>
					<archive>
						<manifestEntries>
							<Build-JVM>${java.vm.name} - ${java.vm.vendor}</Build-JVM>
							<Build-OS>${os.name} - Version: ${os.version}</Build-OS>
							<Application-Version>${project.version}</Application-Version>
							<Target-Environment>${environment}</Target-Environment>
							<Target-Country>${country}</Target-Country>
						</manifestEntries>
					</archive>
				</configuration>
			</plugin>

			<!-- Maven Eclipse Plugin -->
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-eclipse-plugin</artifactId>
				<version>2.8</version>
				<configuration>
					<downloadSources>true</downloadSources>
					<wtpversion>2.0</wtpversion>
				</configuration>
			</plugin>
		</plugins>
	</build>

</project>
