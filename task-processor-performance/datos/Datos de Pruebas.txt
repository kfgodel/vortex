Parametros para correr los tests (el ultimo lo necesita visualVm):
-Xms512M -Xmx512M -XX:PermSize=256M -XX:MaxPermSize=256M -Xshare:off


Micro oscilando entre 0% y 3% (con el administrador de windows)
Primero activo profiling de CPU y arranco el test.
Lo dejo correr durante 1m y registro los valores.
Despues lo corro sin profiling (hay bastante diferencia)


 - Condiciones de vacio (test con dummy)
(Con y sin profiler)
Uso del micro: 0%
Ticks totales: 0 segs: 60.011 s
Ticks per milis: 0.0

Metodo	Tiempo propio en ms	Cantidad de ejecucines
net.gaia.taskprocessor.perf.impl.medidor.ThreadMedidorDeTicks.realizarAccionRepetida()	59.522 ms	60 ejecuciones
net.gaia.taskprocessor.perf.impl.medidor.MedirTicksPorSegundoWorkUnit.doWork()	0,801 ms	60
(No tiene tiene más tiempos porque no realiza modificaciones)

 - SimpleLoopTester - Prueba más simple en unico thread de for infinito
(Con profiler)
Uso del micro: 40%
Tiempo total: 130.878s
Tiempo ejecutando: 77.029 (58.8%)
Tiempo esperando: 53.849
Ticks totales: 123456789 segs: 123.031 s
Ticks per milis: 1003.460826946054

net.gaia.taskprocessor.perf.impl.variables.VariableTicksSinConcurrencia.incrementar()	4.276 ms	123.333.106

(Sin profiler)
Uso del micro: 25%
Ticks totales: 16747700414 segs: 77.110 s
Ticks per milis: 217192.3280248995

Notas: El profiler afecta muchísimo las mediciones. De todas maneras esta es la forma más rápida de procesar donde no
tenemos mediciones por segundo.

- 4X SimpleLoopTester - Tantas VMs como cores
(Sin profiler)
Uso del micro: 100%
4X Ticks totales: 16747700414 segs: 78.011 s
Ticks per milis: 214683.83194677674
=
Ticks per milis: 858732

Notas: Pareciera que es el máximo conseguible si no se hace nada


- 8X SimpleLoopTester - Tantas VMs como cores [-Xms128M -Xmx128M -XX:PermSize=25M -XX:MaxPermSize=25M -Xshare:off]
(Sin profiler)
Uso del micro: 100%

8X Ticks totales: 16747700414 segs: 146.52 s                                                                                
Ticks Per Milis: 114303.16962871962
= 
Ticks Per Milis: 914424

Notas: Pareciera que exigir más que la cantidad de cores rinde un poco más, pero no demasiado 

- UnicoThreadALoBruto (variable sin concurrencia)
(Con profiler)
Uso del micro: 42%
Tiempo total: 60.200s
Tiempo ejecutando: 41.668 (69.2%)
Tiempo esperando: 18.532
Ticks totales: 33979820 segs: 60.029 s
Ticks per milis: 566.0567392426993

net.gaia.taskprocessor.perf.impl.medidor.ThreadMedidorDeTicks.realizarAccionRepetida()	56.932 ms	58
net.gaia.taskprocessor.perf.impl.medidor.MedirTicksPorSegundoWorkUnit.doWork()	1,4 ms	58
net.gaia.taskprocessor.perf.impl.variables.VariableTicksSinConcurrencia.incrementar()	1.101 ms	33.850.446
net.gaia.taskprocessor.perf.impl.tests.ThreadIncrementadorBruto.realizarAccionRepetida()	7.012 ms	33.850.446

(Sin profiler)
Uso del micro: 25%
Ticks totales: 7538588181 segs: 60.006 s
Ticks per milis: 125630.57329267073

Notas: Mucha variabilidad en los ticks. De un segundo a otro iba de 4.8000414321737684E-4/s a 19559.516759445694/s.
Entre un segundo y otro varía mucho la cantidad de ejecuciones.


- UnicoThreadALoBruto (variable con concurrencia)
(Con profiler)
Uso del micro: 42%
Tiempo total: 60.118s (IncrementadorBruto)
Tiempo ejecutando: 42.613 (70.8%)
Tiempo esperando: 17.505
Ticks totales: 33683208 segs: 60.015 s
Ticks per milis: 561.2464883779055

net.gaia.taskprocessor.perf.impl.medidor.ThreadMedidorDeTicks.realizarAccionRepetida()	59.449 ms	60
net.gaia.taskprocessor.perf.impl.medidor.MedirTicksPorSegundoWorkUnit.doWork()	1,38 ms	60
net.gaia.taskprocessor.perf.impl.variables.VariableTicksConcurrente.incrementar()	2.152 ms	33.683.208
net.gaia.taskprocessor.perf.impl.tests.ThreadIncrementadorBruto.realizarAccionRepetida()	8.111 ms	33.683.208

(Sin profiler)
Uso del micro: 25%
Ticks totales: 2352189610 segs: 60.009 s
Ticks per milis: 39197.28057458048

Notas: Mucha variabilidad en los ticks. De un segundo a otro iba de 4.19514043828567E-4/s a 19353.81111035561/s.
Entre un segundo y otro varía mucho la cantidad de ejecuciones.



- MultiplesThreadsALoBruto x 2 (variable sin concurrencia) 
(Con profiler)
Uso del micro: 57%
Tiempo total: 60.150s (IncrementadorBruto)
Tiempo ejecutando: 39.763 (70.8%)
Tiempo esperando: 8.135
Tiempo monitor: 12.252 (20.3%)
Ticks totales: 33179248 segs: 60.01 s
Ticks per milis: 552.8953174470921

net.gaia.taskprocessor.perf.impl.medidor.ThreadMedidorDeTicks.realizarAccionRepetida()	58.971 ms	60
net.gaia.taskprocessor.perf.impl.medidor.MedirTicksPorSegundoWorkUnit.doWork()	1,2 ms	60
net.gaia.taskprocessor.perf.impl.variables.VariableTicksSinConcurrencia.incrementar()	3.052 ms	33.184.878
net.gaia.taskprocessor.perf.impl.tests.ThreadIncrementadorBruto.realizarAccionRepetida()	24.904 ms	33.184.878

(Sin profiler)
Uso del micro: 50%
Ticks totales: 1149667332 segs: 60.011 s
Ticks per milis: 19157.609971505222

Notas: Mucha variabilidad en los ticks. De un segundo a otro varia similar al de un thread pero pareciera que es más extremo
(el doble de rapido, el doble de lento).
Por otro lado aparecio en cada thread tiempo de monitor (que no sé lo que significa).


- MultiplesThreadsALoBruto x 2 (variable con concurrencia) 
(Con profiler)
Uso del micro: 58%
Tiempo total: 60.063s (IncrementadorBruto)
Tiempo ejecutando: 53.571 (89.1%)
Tiempo esperando: 0.0
Tiempo monitor: 6.492 (10.8%)
Ticks totales: 33128101 segs: 60.064 s
Ticks per milis: 551.5467001864678

net.gaia.taskprocessor.perf.impl.medidor.ThreadMedidorDeTicks.realizarAccionRepetida()	59.549 ms	60
net.gaia.taskprocessor.perf.impl.medidor.MedirTicksPorSegundoWorkUnit.doWork()	1,21 ms	60
net.gaia.taskprocessor.perf.impl.variables.VariableTicksConcurrente.incrementar()	6.268 ms	33.128.101
net.gaia.taskprocessor.perf.impl.tests.ThreadIncrementadorBruto.realizarAccionRepetida()	22.940 ms	33.128.101

(Sin profiler)
Uso del micro: 50%
Ticks totales: 866712698 segs: 60.012 s
Ticks per milis: 14442.323168699593

Notas: Mucha variabilidad en los ticks. De un segundo a otro varia similar al de sin sincronizacion.
Por otro lado aparecio en cada thread tiempo de monitor donde parece que un thread cede a otro.


- MultiplesThreadsALoBruto x 4 (variable sin concurrencia) 
(Con profiler)
Uso del micro: 72%
Tiempo total: 60.834s (IncrementadorBruto)
Tiempo ejecutando: 35.463 (70.8%)
Tiempo esperando: 0
Tiempo monitor: 25.371 (41.7%)
Ticks totales: 19736316 segs: 60.006 s
Ticks per milis: 328.9057094290571

net.gaia.taskprocessor.perf.impl.medidor.ThreadMedidorDeTicks.realizarAccionRepetida()	59.549 ms	60
net.gaia.taskprocessor.perf.impl.medidor.MedirTicksPorSegundoWorkUnit.doWork()	1,25 ms60
net.gaia.taskprocessor.perf.impl.variables.VariableTicksSinConcurrencia.incrementar()	2.604 ms	19.773.583
net.gaia.taskprocessor.perf.impl.tests.ThreadIncrementadorBruto.realizarAccionRepetida()	31.049 ms	19.773.583

(Sin profiler)
Uso del micro: 100%
Ticks totales: 217509604 segs: 60.011 s
Ticks per milis: 3624.4955758111014

Notas: Mucha variabilidad en los ticks. El tiempo de monitor pasa a ser muy grande para algunos threads y más
desparejo entre threads.


- MultiplesThreadsALoBruto x 4 (variable con concurrencia) 
(Con profiler)
Uso del micro: 75%
Tiempo total: 59.899s (IncrementadorBruto)
Tiempo ejecutando: 39.565 (66.0%)
Tiempo esperando: 2.034
Tiempo monitor: 18.300 (30.5%)
Ticks totales: 21914181 segs: 60.009 s
Ticks per milis: 365.1815727640854

net.gaia.taskprocessor.perf.impl.medidor.ThreadMedidorDeTicks.realizarAccionRepetida()	59.481 ms	60
net.gaia.taskprocessor.perf.impl.medidor.MedirTicksPorSegundoWorkUnit.doWork()	1,42 ms	60
net.gaia.taskprocessor.perf.impl.variables.VariableTicksConcurrente.incrementar()	4.766 ms	21.914.181
net.gaia.taskprocessor.perf.impl.tests.ThreadIncrementadorBruto.realizarAccionRepetida()	29.529 ms	21.914.181

(Sin profiler)
Uso del micro: 100%
Ticks totales: 178062637 segs: 60.013 s
Ticks per milis: 2967.0677519870696

Notas: Mucha variabilidad en los ticks (aunque menor que sin sincro)


- MultiplesThreadsALoBruto x 32 (variable sin concurrencia) 
(Con profiler)
Uso del micro: 66%
Tiempo total: 59.777s (IncrementadorBruto)
Tiempo ejecutando: 6.069 (10.1%)
Tiempo esperando: 0
Tiempo monitor: 53.708 (89.8%)
Ticks totales: 19099949 segs: 60.013 s
Ticks per milis: 318.2635262359822

x
x
net.gaia.taskprocessor.perf.impl.variables.VariableTicksSinConcurrencia.incrementar()	2.724 ms	18.362.470
net.gaia.taskprocessor.perf.impl.tests.ThreadIncrementadorBruto.realizarAccionRepetida()	29.824 ms	18.362.470

(Sin profiler)
Uso del micro: 100%
Ticks totales: 76837790 segs: 60.011 s
Ticks per milis: 1280.395094232724

Notas: Mucha variabilidad en los ticks. El tiempo de monitor es más que el de ejecución. Demasiados threads esperandose


- MultiplesThreadsALoBruto x 32 (variable con concurrencia) 
(Con profiler)
Uso del micro: 67%
Tiempo total: 60.733s (IncrementadorBruto)
Tiempo ejecutando: 6.097 (10.0%)
Tiempo esperando: 0
Tiempo monitor: 54.636 (89.9%)
Ticks totales: 17840562 segs: 60.015 s
Ticks per milis: 297.26838290427395

x
x
net.gaia.taskprocessor.perf.impl.variables.VariableTicksConcurrente.incrementar()	4.015 ms	17.188.615
net.gaia.taskprocessor.perf.impl.tests.ThreadIncrementadorBruto.realizarAccionRepetida()	26.122 ms	17.188.615

(Sin profiler)
Uso del micro: 100%
Ticks totales: 180054985 segs: 60.002 s
Ticks per milis: 3000.8163894536847

Notas: Mucha variabilidad en los ticks (aunque menor que sin sincro)


- 2VM x UnicoThreadALoBruto (variable sin concurrencia)
(Con profiler sólo para una de ellas)
Son datos iguales a los de una VM ejecutando sola. Es como si la otra VM no existiera  

(Sin profiler)
Uso del micro: 50%
Ticks totales: 7501927825 segs: 60.01 s
Ticks per milis: 125011.29520079987
+
Ticks totales: 7501287672 segs: 60.009 s
Ticks per milis: 125002.71079338099
=
Ticks totales: 15003215497 segs: 60.009 s
Ticks per milis: 250016.0892032862


Notas: La performance de ambas se dobla y pareciera la mejor forma de ejecutar cosas en paralelo


- 4VM x UnicoThreadALoBruto (variable sin concurrencia)
(Con profiler sólo para una de ellas)
Son datos iguales a los de una VM ejecutando sola. Es como si la otra VM no existiera  

(Sin profiler)
Uso del micro: 100%
Ticks totales: 7294238637 segs: 60.013 s
Ticks per milis: 121544.30934964091
+
Ticks totales: 7373966367 segs: 60.015 s
Ticks per milis: 122868.72226943265
+
Ticks totales: 7245567921 segs: 60.015 s
Ticks per milis: 120729.2830292427
+
Ticks totales: 7840633933 segs: 60.0 s
Ticks per milis: 130677.23221666667
=
Ticks totales: 29003215497 segs: 60.009 s
Ticks per milis: 495782,8352578522


Notas: Tantas VMs como nucleos para ser el limite



- 8VM x UnicoThreadALoBruto (variable sin concurrencia) [-Xms128M -Xmx128M -XX:PermSize=25M -XX:MaxPermSize=25M -Xshare:off]
(Con profiler sólo para una de ellas)
Son datos iguales a los de una VM ejecutando sola. Es como si la otra VM no existiera  

(Sin profiler)
Uso del micro: 100%
Aprox (8X)
Ticks totales: 4444063295 segs: 60.004 s
Ticks per milis: 70406
=
Ticks totales: --
Ticks per milis: 563248


Notas: Tantas VMs como nucleos para ser el limite